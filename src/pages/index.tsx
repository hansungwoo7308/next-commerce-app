import { getData } from "lib/public/fetchData";
import Head from "next/head";
import Image from "next/image";
import { styled } from "styled-components";
import Slider from "react-slick";
// Import css files
import "slick-carousel/slick/slick.css";
import "slick-carousel/slick/slick-theme.css";
import { IoIosArrowBack, IoIosArrowForward } from "react-icons/io";
import { useRef } from "react";
import SlickSlider from "@/components/performance/SlickSlider";

// export async function getServerSideProps({ query }: any) {
//   const response = await getData(`v2/products`, query);
//   const { products, pages } = response.data;
//   return { props: { products, pages } };
//   // console.log({ query });
//   // const { page }: any = query;
//   // const response = await getData(`v2/products?page=${page}`);
// }

const data = [
  "slide-01.jpg",
  "slide-02.jpg",
  "slide-01.jpg",
  "slide-02.jpg",
  "slide-01.jpg",
  "slide-02.jpg",
];

const nextImages = [
  "/images/slide-01.jpg",
  "/images/slide-02.jpg",
  "/images/slide-01.jpg",
  "/images/slide-02.jpg",
  // <Image src="/images/slide-01.jpg" width={1000} height={1000} alt="alt" />,
  // <Image src="/images/slide-02.jpg" width={1000} height={1000} alt="alt" />,
  // <Image src="/images/slide-01.jpg" width={1000} height={1000} alt="alt" />,
  // <Image src="/images/slide-02.jpg" width={1000} height={1000} alt="alt" />,
];

export default function Home({ products, pages }: any) {
  // console.log({ products, pages });
  // if (!products) return null;

  const sliderRef: any = useRef();

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Main>
        <section className="hero">
          <div className="slider">
            <Slider
              ref={sliderRef}
              arrows={false}
              dots={true}
              speed={1000}
              // autoplay={true}
              // autoplaySpeed={5000}
              // pauseOnHover={true}
            >
              {/* {nextImages.map((image: any) => image)} */}
              <img src="/images/slide-01.jpg" alt="alt" />
              <img src="/images/slide-02.jpg" alt="alt" />
              <img src="/images/slide-01.jpg" alt="alt" />
              <img src="/images/slide-02.jpg" alt="alt" />
            </Slider>
            <div className="controller">
              <button className="prev arrow" onClick={() => sliderRef.current.slickPrev()}>
                <IoIosArrowBack size={20} color="#fff" />
              </button>
              <button className="next arrow" onClick={() => sliderRef.current.slickNext()}>
                <IoIosArrowForward size={20} color="#fff" />
              </button>
            </div>
          </div>
          <SlickSlider imageUrls={nextImages} />

          {/* <div className="card-layout">
            <div className="card">card</div>
            <div className="card">card</div>
            <div className="card">card</div>
            <div className="card">card</div>
            <div className="card">card</div>
          </div> */}
          {/* <ul className="card-layout">
            {products.map((product: any) => (
              <li className="card">
                <Image src={product.images[0].url} alt="alt" width={300} height={300} />
                <h1>{product.name}</h1>
              </li>
            ))}
          </ul> */}
        </section>
        <section></section>
        <section></section>
        <section></section>
      </Main>
    </>
  );
}
const Main = styled.main`
  .hero {
    .slider {
      height: 200px;
      position: relative;
      .slick-slider {
        height: 100%;
        /* height: 300px; */
        position: relative;
        overflow: hidden;
        .slick-dots {
          position: absolute;
          bottom: 1rem;
        }
      }
      .controller {
        .arrow {
          height: 100%;
          &:hover {
            color: #000;
            background-color: rgba(0, 0, 0, 0.5);
          }
        }
        .prev {
          width: 5rem;
          position: absolute;
          top: 50%;
          left: 0;
          transform: translateY(-50%);
        }
        .next {
          width: 5rem;
          position: absolute;
          top: 50%;
          right: 0;
          transform: translateY(-50%);
        }
      }
      img {
        width: 100%;
        height: 200px;
      }
      button:hover {
        background-color: initial;
      }
    }
  }
  .card-layout {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(auto, 10rem));
    justify-content: center;
    gap: 1rem;
    background-color: #333;
    padding: 1rem;

    .card {
      /* min-width: 15rem; */
      height: 20rem;
      background-color: #fff;
      color: #000;
    }
  }
`;
